import pygame
from random import *
pygame.init()


class dice:
    def __init__(self, dice_image, x_pos=0, y_pos=0):
        self.image = pygame.image.load(dice_image).convert()
        self.rect = self.image.get_rect()
        self.rect.x = x_pos
        self.rect.y = y_pos

DISPLAY_WIDTH = 680
DISPLAY_HEIGHT = 480
screen = pygame.display.set_mode([DISPLAY_WIDTH, DISPLAY_HEIGHT])
dice_image1 = pygame.image.load('dice1.png').convert()
dice_width, dice_height = dice_image1.get_rect().size
counter = 0
rect1=dice_image1.get_rect()
rect2=dice_image1.get_rect()
rect3=dice_image1.get_rect()
rect4=dice_image1.get_rect()
rect5=dice_image1.get_rect()

dice_image_list = list()
dice_image_list.append('dice1.png')
dice_image_list.append('dice2.png')
dice_image_list.append('dice3.png')
dice_image_list.append('dice4.png')
dice_image_list.append('dice5.png')
dice_image_list.append('dice6.png')

rect1.left = ((DISPLAY_WIDTH / 2) - (dice_width / 2)-200)
rect1.top = (DISPLAY_HEIGHT / 2) - (dice_height / 2)

rect2.left = ((DISPLAY_WIDTH / 2) - (dice_width / 2)-100)
rect2.top = ((DISPLAY_HEIGHT / 2) - (dice_height / 2)-100)

rect3.left = (DISPLAY_WIDTH / 2) - (dice_width / 2)
rect3.top = (DISPLAY_HEIGHT / 2) - (dice_height / 2)

rect4.left = ((DISPLAY_WIDTH / 2) - (dice_width / 2)+100)
rect4.top = ((DISPLAY_HEIGHT / 2) - (dice_height / 2)-100)

rect5.left = ((DISPLAY_WIDTH / 2) - (dice_width / 2)+200)
rect5.top = (DISPLAY_HEIGHT / 2) - (dice_height / 2)

nodice = pygame.image.load("nodice.png")

dices = list()
dices.append(dice(dice_image_list[randint(0, 5)], rect1.left, rect1.top))
dices.append(dice(dice_image_list[randint(0, 5)], rect2.left, rect2.top))
dices.append(dice(dice_image_list[randint(0, 5)], rect3.left, rect3.top))
dices.append(dice(dice_image_list[randint(0, 5)], rect4.left, rect4.top))
dices.append(dice(dice_image_list[randint(0, 5)], rect5.left, rect5.top))



running = True
while running:
    event = pygame.event.poll()
    if event.type == pygame.QUIT:
        running = False

    if event.type == pygame.MOUSEBUTTONDOWN:
        for dice in dices:
            if dice.rect.collidepoint(event.pos):
                screen.blit(nodice, (dice.rect.x, dice.rect.y))
                dices.remove(dice)
                print("works")
                pygame.display.update()
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_SPACE:
            for dice in dices:
                event = pygame.event.poll()
                screen.blit(dice.image, (dice.rect.x, dice.rect.y))
                pygame.display.update()
            counter += 1
            print(counter)
            if counter == 3:
                del(dices)
                dices = list()
                dices.append(dice(dice_image_list[randint(0, 5)], rect1.left, rect1.top))
                dices.append(dice(dice_image_list[randint(0, 5)], rect2.left, rect2.top))
                dices.append(dice(dice_image_list[randint(0, 5)], rect3.left, rect3.top))
                dices.append(dice(dice_image_list[randint(0, 5)], rect4.left, rect4.top))
                dices.append(dice(dice_image_list[randint(0, 5)], rect5.left, rect5.top))
                print(dices)
                for dice in dices:
                    event = pygame.event.poll()
                    screen.blit(dice.image, (dice.rect.x, dice.rect.y))
                    pygame.display.update()
                counter = 0


    pygame.display.flip()
pygame.quit()

